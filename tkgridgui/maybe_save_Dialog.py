#!/usr/bin/env python
# -*- coding: ascii -*-
from __future__ import print_function

# NOTICE... this file is generated by TkGridGUI.
# Any code or comments added by the user must be in designated areas ONLY.
# User additions will be lost if they are placed in code-generated areas.
# (i.e. Saving from TkGridGUI will over-write code-generated areas.)

# TkGridGUI generated code. DO NOT EDIT THE FOLLOWING. section "imports"

import sys

if sys.version_info < (3,):
    from future import standard_library
    standard_library.install_aliases()
    from ttk import Combobox, Progressbar, Separator, Treeview, Notebook
    from tkSimpleDialog import Dialog
else:
    from tkinter.ttk import Combobox, Progressbar, Separator, Treeview, Notebook
    from tkinter.simpledialog import Dialog

from tkinter import *
from tkinter import Button, Canvas, Checkbutton, Entry, Frame, Label, LabelFrame
from tkinter import Listbox, Message, Radiobutton, Spinbox, Text
from tkinter import OptionMenu
from tkinter import _setit as set_command


# >>>>>>insert any user code below this comment for section "imports"
# Place any user import statements here

# TkGridGUI generated code. DO NOT EDIT THE FOLLOWING. section "top_of_init"

class _Dialog(Dialog):
    # use dialogOptions dictionary to set any values in the dialog
    def __init__(self, parent, title = None, dialogOptions=None):
    
        self.dialogOptions = dialogOptions
        Dialog.__init__(self, parent, title)

class maybe_save_dialog(_Dialog):

    def buttonbox(self):
        pass
        # this dummy routine overrides the standard "OK" and "Cancel" buttons
        # REMEMBER!!! to call self.ok() and self.cancel() in User Code

    def body(self, master):
        dialogframe = Frame(master, width=321, height=110)
        self.dialogframe = dialogframe
        dialogframe.pack()


        self.make_Button_1( self.dialogframe )         #      Button: Save File : at Main(4,1)
        self.make_Button_2( self.dialogframe )         #      Button: Do NOT Save : at Main(4,3)
        self.make_Label_1( self.dialogframe )          #       Label: Current File has Changed : at Main(1,1)
        self.make_Label_2( self.dialogframe )          #       Label: Do you want to Save before Continuing? : at Main(2,1)
        self.make_Label_3( self.dialogframe )          #       Label:  at Main(3,1)
        self.make_Label_4( self.dialogframe )          #       Label:  at Main(5,1)


        # >>>>>>insert any user code below this comment for section "top_of_init"
        
        self.save_file = False


    # TkGridGUI generated code. DO NOT EDIT THE FOLLOWING. section "make_Button_1"
    def make_Button_1(self, frame):
        """      Button: Save File : at Main(4,1)"""
        self.Button_1 = Button( frame , text="Save File", width="15")
        self.Button_1.grid(row=4, column=1)

        # >>>>>>insert any user code below this comment for section "make_Button_1"

        self.Button_1.bind("<ButtonRelease-1>", self.Button_1_Click)

    # TkGridGUI generated code. DO NOT EDIT THE FOLLOWING. section "make_Button_2"
    def make_Button_2(self, frame):
        """      Button: Do NOT Save : at Main(4,3)"""
        self.Button_2 = Button( frame , text="Do NOT Save", width="15")
        self.Button_2.grid(row=4, column=3)

        # >>>>>>insert any user code below this comment for section "make_Button_2"

        self.Button_2.bind("<ButtonRelease-1>", self.Button_2_Click)

    # TkGridGUI generated code. DO NOT EDIT THE FOLLOWING. section "make_Label_1"
    def make_Label_1(self, frame):
        """       Label: Current File has Changed : at Main(1,1)"""
        self.Label_1 = Label( frame , text="Current File has Changed", width="45")
        self.Label_1.grid(row=1, column=1, columnspan="3")

        # >>>>>>insert any user code below this comment for section "make_Label_1"


    # TkGridGUI generated code. DO NOT EDIT THE FOLLOWING. section "make_Label_2"
    def make_Label_2(self, frame):
        """       Label: Do you want to Save before Continuing? : at Main(2,1)"""
        self.Label_2 = Label( frame , text="Do you want to Save before Continuing?", width="45")
        self.Label_2.grid(row=2, column=1, columnspan="3")

        # >>>>>>insert any user code below this comment for section "make_Label_2"


    # TkGridGUI generated code. DO NOT EDIT THE FOLLOWING. section "make_Label_3"
    def make_Label_3(self, frame):
        """       Label:  at Main(3,1)"""
        self.Label_3 = Label( frame , text="", width="15")
        self.Label_3.grid(row=3, column=1)

        # >>>>>>insert any user code below this comment for section "make_Label_3"


    # TkGridGUI generated code. DO NOT EDIT THE FOLLOWING. section "make_Label_4"
    def make_Label_4(self, frame):
        """       Label:  at Main(5,1)"""
        self.Label_4 = Label( frame , text="", width="15")
        self.Label_4.grid(row=5, column=1)

        # >>>>>>insert any user code below this comment for section "make_Label_4"


    # TkGridGUI generated code. DO NOT EDIT THE FOLLOWING. section "Button_1_Click"
    def Button_1_Click(self, event): #bind method for component ID=Button_1
        """      Button: Save File : at Main(4,1)"""
        pass
        # >>>>>>insert any user code below this comment for section "Button_1_Click"
        # replace, delete, or comment-out the following
        #print( "executed method Button_1_Click" )
        self.save_file = True
        self.ok()

    # TkGridGUI generated code. DO NOT EDIT THE FOLLOWING. section "Button_2_Click"
    def Button_2_Click(self, event): #bind method for component ID=Button_2
        """      Button: Do NOT Save : at Main(4,3)"""
        pass
        # >>>>>>insert any user code below this comment for section "Button_2_Click"
        # replace, delete, or comment-out the following
        #print( "executed method Button_2_Click" )
        self.save_file = False
        self.ok()

    # TkGridGUI generated code. DO NOT EDIT THE FOLLOWING. section "dialog_validate"
    def validate(self):
        self.result = {} # return a dictionary of results
    


        # >>>>>>insert any user code below this comment for section "dialog_validate"
        # set values in "self.result" dictionary for return
        # for example...
        # self.result["age"] = self.Entry_2_StringVar.get() 

        if self.save_file:
            self.result["save_file"] = "yes" 
        else:
            self.result["save_file"] = "no" 
        return 1
# TkGridGUI generated code. DO NOT EDIT THE FOLLOWING. section "end"


    def apply(self):
        #print( 'apply called' )
        pass

class _Testdialog:
    def __init__(self, master):
        frame = Frame(master, width=300, height=300)
        frame.pack()
        self.master = master
        self.x, self.y, self.w, self.h = -1,-1,-1,-1
        
        self.Button_1 = Button(text="Test Dialog", relief="raised", width="15")
        self.Button_1.place(x=84, y=36)
        self.Button_1.bind("<ButtonRelease-1>", self.Button_1_Click)

    def Button_1_Click(self, event): #click method for component ID=1
        dialog = maybe_save_dialog(self.master, "Test Dialog")
        print( '===============Result from Dialog====================' )
        print( dialog.result )
        print( '=====================================================' )

def main():
    root = Tk()
    app = _Testdialog(root)
    root.mainloop()

if __name__ == '__main__':
    main()
