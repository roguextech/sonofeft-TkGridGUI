#!/usr/bin/env python
# -*- coding: ascii -*-
from __future__ import print_function

# NOTICE... this file is generated by TkGridGUI.

import sys

if sys.version_info < (3,):
    from future import standard_library
    standard_library.install_aliases()
    from ttk import Combobox, Progressbar, Separator, Treeview, Notebook
    from tkSimpleDialog import Dialog
else:
    from tkinter.ttk import Combobox, Progressbar, Separator, Treeview, Notebook
    from tkinter.simpledialog import Dialog


from tkinter import *
from tkinter import Button, Canvas, Checkbutton, Entry, Frame, Label, LabelFrame
from tkinter import Listbox, Message, Radiobutton, Spinbox, Text
from tkinter import OptionMenu
from tkinter import _setit as set_command


class _Dialog(Dialog):
    # use dialogOptions dictionary to set any values in the dialog
    def __init__(self, parent, title = None, dialogOptions=None):
    
        self.dialogOptions = dialogOptions
        self.label_text = ' '.join( title.split()[:2] )
        Dialog.__init__(self, parent, title)
        

class Wt_Select_Dialog(_Dialog):

    def body(self, master):
        dialogframe = Frame(master, width=446, height=152)
        self.dialogframe = dialogframe
        dialogframe.pack()

        self.make_Button_1( self.dialogframe )               # edit below
        self.make_Button_2( self.dialogframe )               # edit below
        self.make_Button_3( self.dialogframe )               # edit below
        self.make_Button_4( self.dialogframe )               # edit below
        self.make_Button_5( self.dialogframe )               # edit below
        self.make_Button_6( self.dialogframe )               # edit below
        self.make_Frame_1( self.dialogframe )                # edit below
        self.make_Label_1( self.dialogframe )                # edit below
        self.make_Message_1( self.dialogframe )              # edit below
        self.make_Message_2( self.dialogframe )              # edit below
        self.make_Message_3( self.dialogframe )              # edit below
        self.make_Label_2( self.Frame_1 )                    # edit below
        self.make_Spinbox_1( self.Frame_1 )                  # edit below


    def make_Button_1(self, frame):
        self.Button_1 = Button( frame , text="1", width="6")
        self.Button_1.grid(row=3, column=1)
        self.Button_1.bind("<ButtonRelease-1>", self.Button_1_Click)

    def make_Button_2(self, frame):
        self.Button_2 = Button( frame , text="2", width="6")
        self.Button_2.grid(row=3, column=2)
        self.Button_2.bind("<ButtonRelease-1>", self.Button_2_Click)

    def make_Button_3(self, frame):
        self.Button_3 = Button( frame , text="3", width="6")
        self.Button_3.grid(row=3, column=3)
        self.Button_3.bind("<ButtonRelease-1>", self.Button_3_Click)

    def make_Button_4(self, frame):
        self.Button_4 = Button( frame , text="4", width="6")
        self.Button_4.grid(row=3, column=4)
        self.Button_4.bind("<ButtonRelease-1>", self.Button_4_Click)

    def make_Button_5(self, frame):
        self.Button_5 = Button( frame , text="5", width="6")
        self.Button_5.grid(row=3, column=5)
        self.Button_5.bind("<ButtonRelease-1>", self.Button_5_Click)

    def make_Button_6(self, frame):
        self.Button_6 = Button( frame , text="0", width="6")
        self.Button_6.grid(row=3, column=0)
        self.Button_6.bind("<ButtonRelease-1>", self.Button_6_Click)

    def make_Frame_1(self, frame):
        self.Frame_1 = Frame( frame , width="60", height="50")
        self.Frame_1.grid(row=5, column=0, columnspan="6")


    def make_Label_1(self, frame):
        self.Label_1 = Label( frame , text="Select Weight for %s"%self.label_text, width="40", font="Times\ New\ Roman 14 bold roman")
        self.Label_1.grid(row=1, column=0, columnspan="6")


    def make_Message_1(self, frame):
        self.Message_1 = Message( frame , text="Weight affects how widgets expand and contract on window resize.", width="400")
        self.Message_1.grid(row=6, column=0, columnspan="6")

    def make_Message_2(self, frame):
        self.Message_2 = Message( frame , text="Each widget will still need to set the sticky property (e.g. ns, ew, nsew)", width="400")
        self.Message_2.grid(row=7, column=0, columnspan="6")

    def make_Message_3(self, frame):
        self.Message_3 = Message( frame , width="400", text="Use numbered \"Quick-Set\" buttons or set Spinbox and hit OK.")
        self.Message_3.grid(row=2, column=0, columnspan="6")

    def make_Label_2(self, frame):
        self.Label_2 = Label( frame , text="Select any Value", width="15")
        self.Label_2.grid(row=2, column=1)

    def make_Spinbox_1(self, frame):
        self.Spinbox_1 = Spinbox( frame , to="100", text="Spinbox_1", width="10", from_="1", font="Courier\ New 14 normal roman")
        self.Spinbox_1.grid(row=2, column=2)
        self.Spinbox_1_StringVar = StringVar()

        self.Spinbox_1.configure(textvariable=self.Spinbox_1_StringVar, to="10", from_="1")
        self.Spinbox_1_StringVar.set("6")
        self.Spinbox_1_StringVar_traceName = self.Spinbox_1_StringVar.trace_variable("w", self.Spinbox_1_StringVar_Callback)

    def Button_1_Click(self, event): #bind method for component ID=Button_1
        self.Spinbox_1_StringVar.set("1")
        self.ok()

    def Button_2_Click(self, event): #bind method for component ID=Button_2
        self.Spinbox_1_StringVar.set("2")
        self.ok()
        
    def Button_3_Click(self, event): #bind method for component ID=Button_3
        self.Spinbox_1_StringVar.set("3")
        self.ok()

    def Button_4_Click(self, event): #bind method for component ID=Button_4
        self.Spinbox_1_StringVar.set("4")
        self.ok()

    def Button_5_Click(self, event): #bind method for component ID=Button_5
        self.Spinbox_1_StringVar.set("5")
        self.ok()

    def Button_6_Click(self, event): #bind method for component ID=Button_6
        self.Spinbox_1_StringVar.set("0")
        self.ok()

    def Spinbox_1_StringVar_Callback(self, varName, index, mode):
        pass

    def validate(self):
        self.result = {} # return a dictionary of results

        self.result["weight"] = self.Spinbox_1_StringVar.get()
        return 1

    def apply(self):
        pass
        

class _Testdialog:
    def __init__(self, master):
        frame = Frame(master, width=300, height=300)
        frame.pack()
        self.master = master
        self.x, self.y, self.w, self.h = -1,-1,-1,-1
        
        self.Button_1 = Button(text="Test Dialog", relief="raised", width="15")
        self.Button_1.place(x=84, y=36)
        self.Button_1.bind("<ButtonRelease-1>", self.Button_1_Click)

    def Button_1_Click(self, event): #click method for component ID=1
        dialog = Wt_Select_Dialog(self.master, "Row 3 Weight")
        print( '===============Result from Dialog====================' )
        print( dialog.result )
        print( '=====================================================' )

def main():
    root = Tk()
    app = _Testdialog(root)
    root.mainloop()

if __name__ == '__main__':
    main()
